// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package subscription.proxies;

public class Person
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject personMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Subscription.Person";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		LastName("LastName"),
		FirstName("FirstName"),
		EMail("EMail"),
		Phone("Phone"),
		Person_SkiLevel("Subscription.Person_SkiLevel"),
		Person_ActivityType("Subscription.Person_ActivityType"),
		Person_FoodPreference("Subscription.Person_FoodPreference"),
		Person_TransportationType("Subscription.Person_TransportationType"),
		Person_RegistrationStatus("Subscription.Person_RegistrationStatus"),
		Person_Employee("Subscription.Person_Employee"),
		Roommate("Subscription.Roommate");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Person(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Subscription.Person"));
	}

	protected Person(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject personMendixObject)
	{
		if (personMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Subscription.Person", personMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Subscription.Person");

		this.personMendixObject = personMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Person.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static subscription.proxies.Person initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return subscription.proxies.Person.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static subscription.proxies.Person initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new subscription.proxies.Person(context, mendixObject);
	}

	public static subscription.proxies.Person load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return subscription.proxies.Person.initialize(context, mendixObject);
	}

	public static java.util.List<subscription.proxies.Person> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<subscription.proxies.Person> result = new java.util.ArrayList<subscription.proxies.Person>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Subscription.Person" + xpathConstraint))
			result.add(subscription.proxies.Person.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of LastName
	 */
	public final java.lang.String getLastName()
	{
		return getLastName(getContext());
	}

	/**
	 * @param context
	 * @return value of LastName
	 */
	public final java.lang.String getLastName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.LastName.toString());
	}

	/**
	 * Set value of LastName
	 * @param lastname
	 */
	public final void setLastName(java.lang.String lastname)
	{
		setLastName(getContext(), lastname);
	}

	/**
	 * Set value of LastName
	 * @param context
	 * @param lastname
	 */
	public final void setLastName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String lastname)
	{
		getMendixObject().setValue(context, MemberNames.LastName.toString(), lastname);
	}

	/**
	 * @return value of FirstName
	 */
	public final java.lang.String getFirstName()
	{
		return getFirstName(getContext());
	}

	/**
	 * @param context
	 * @return value of FirstName
	 */
	public final java.lang.String getFirstName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FirstName.toString());
	}

	/**
	 * Set value of FirstName
	 * @param firstname
	 */
	public final void setFirstName(java.lang.String firstname)
	{
		setFirstName(getContext(), firstname);
	}

	/**
	 * Set value of FirstName
	 * @param context
	 * @param firstname
	 */
	public final void setFirstName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String firstname)
	{
		getMendixObject().setValue(context, MemberNames.FirstName.toString(), firstname);
	}

	/**
	 * @return value of EMail
	 */
	public final java.lang.String getEMail()
	{
		return getEMail(getContext());
	}

	/**
	 * @param context
	 * @return value of EMail
	 */
	public final java.lang.String getEMail(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.EMail.toString());
	}

	/**
	 * Set value of EMail
	 * @param email
	 */
	public final void setEMail(java.lang.String email)
	{
		setEMail(getContext(), email);
	}

	/**
	 * Set value of EMail
	 * @param context
	 * @param email
	 */
	public final void setEMail(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String email)
	{
		getMendixObject().setValue(context, MemberNames.EMail.toString(), email);
	}

	/**
	 * @return value of Phone
	 */
	public final java.lang.String getPhone()
	{
		return getPhone(getContext());
	}

	/**
	 * @param context
	 * @return value of Phone
	 */
	public final java.lang.String getPhone(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Phone.toString());
	}

	/**
	 * Set value of Phone
	 * @param phone
	 */
	public final void setPhone(java.lang.String phone)
	{
		setPhone(getContext(), phone);
	}

	/**
	 * Set value of Phone
	 * @param context
	 * @param phone
	 */
	public final void setPhone(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String phone)
	{
		getMendixObject().setValue(context, MemberNames.Phone.toString(), phone);
	}

	/**
	 * @return value of Person_SkiLevel
	 */
	public final subscription.proxies.SkiLevel getPerson_SkiLevel() throws com.mendix.core.CoreException
	{
		return getPerson_SkiLevel(getContext());
	}

	/**
	 * @param context
	 * @return value of Person_SkiLevel
	 */
	public final subscription.proxies.SkiLevel getPerson_SkiLevel(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		subscription.proxies.SkiLevel result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Person_SkiLevel.toString());
		if (identifier != null)
			result = subscription.proxies.SkiLevel.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Person_SkiLevel
	 * @param person_skilevel
	 */
	public final void setPerson_SkiLevel(subscription.proxies.SkiLevel person_skilevel)
	{
		setPerson_SkiLevel(getContext(), person_skilevel);
	}

	/**
	 * Set value of Person_SkiLevel
	 * @param context
	 * @param person_skilevel
	 */
	public final void setPerson_SkiLevel(com.mendix.systemwideinterfaces.core.IContext context, subscription.proxies.SkiLevel person_skilevel)
	{
		if (person_skilevel == null)
			getMendixObject().setValue(context, MemberNames.Person_SkiLevel.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Person_SkiLevel.toString(), person_skilevel.getMendixObject().getId());
	}

	/**
	 * @return value of Person_ActivityType
	 */
	public final subscription.proxies.ActivityType getPerson_ActivityType() throws com.mendix.core.CoreException
	{
		return getPerson_ActivityType(getContext());
	}

	/**
	 * @param context
	 * @return value of Person_ActivityType
	 */
	public final subscription.proxies.ActivityType getPerson_ActivityType(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		subscription.proxies.ActivityType result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Person_ActivityType.toString());
		if (identifier != null)
			result = subscription.proxies.ActivityType.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Person_ActivityType
	 * @param person_activitytype
	 */
	public final void setPerson_ActivityType(subscription.proxies.ActivityType person_activitytype)
	{
		setPerson_ActivityType(getContext(), person_activitytype);
	}

	/**
	 * Set value of Person_ActivityType
	 * @param context
	 * @param person_activitytype
	 */
	public final void setPerson_ActivityType(com.mendix.systemwideinterfaces.core.IContext context, subscription.proxies.ActivityType person_activitytype)
	{
		if (person_activitytype == null)
			getMendixObject().setValue(context, MemberNames.Person_ActivityType.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Person_ActivityType.toString(), person_activitytype.getMendixObject().getId());
	}

	/**
	 * @return value of Person_FoodPreference
	 */
	public final java.util.List<subscription.proxies.FoodPreference> getPerson_FoodPreference() throws com.mendix.core.CoreException
	{
		return getPerson_FoodPreference(getContext());
	}

	/**
	 * @param context
	 * @return value of Person_FoodPreference
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<subscription.proxies.FoodPreference> getPerson_FoodPreference(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<subscription.proxies.FoodPreference> result = new java.util.ArrayList<subscription.proxies.FoodPreference>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Person_FoodPreference.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(subscription.proxies.FoodPreference.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Person_FoodPreference
	 * @param person_foodpreference
	 */
	public final void setPerson_FoodPreference(java.util.List<subscription.proxies.FoodPreference> person_foodpreference)
	{
		setPerson_FoodPreference(getContext(), person_foodpreference);
	}

	/**
	 * Set value of Person_FoodPreference
	 * @param context
	 * @param person_foodpreference
	 */
	public final void setPerson_FoodPreference(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<subscription.proxies.FoodPreference> person_foodpreference)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (subscription.proxies.FoodPreference proxyObject : person_foodpreference)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Person_FoodPreference.toString(), identifiers);
	}

	/**
	 * @return value of Person_TransportationType
	 */
	public final subscription.proxies.TransportationType getPerson_TransportationType() throws com.mendix.core.CoreException
	{
		return getPerson_TransportationType(getContext());
	}

	/**
	 * @param context
	 * @return value of Person_TransportationType
	 */
	public final subscription.proxies.TransportationType getPerson_TransportationType(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		subscription.proxies.TransportationType result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Person_TransportationType.toString());
		if (identifier != null)
			result = subscription.proxies.TransportationType.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Person_TransportationType
	 * @param person_transportationtype
	 */
	public final void setPerson_TransportationType(subscription.proxies.TransportationType person_transportationtype)
	{
		setPerson_TransportationType(getContext(), person_transportationtype);
	}

	/**
	 * Set value of Person_TransportationType
	 * @param context
	 * @param person_transportationtype
	 */
	public final void setPerson_TransportationType(com.mendix.systemwideinterfaces.core.IContext context, subscription.proxies.TransportationType person_transportationtype)
	{
		if (person_transportationtype == null)
			getMendixObject().setValue(context, MemberNames.Person_TransportationType.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Person_TransportationType.toString(), person_transportationtype.getMendixObject().getId());
	}

	/**
	 * @return value of Person_RegistrationStatus
	 */
	public final subscription.proxies.RegistrationStatus getPerson_RegistrationStatus() throws com.mendix.core.CoreException
	{
		return getPerson_RegistrationStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of Person_RegistrationStatus
	 */
	public final subscription.proxies.RegistrationStatus getPerson_RegistrationStatus(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		subscription.proxies.RegistrationStatus result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Person_RegistrationStatus.toString());
		if (identifier != null)
			result = subscription.proxies.RegistrationStatus.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Person_RegistrationStatus
	 * @param person_registrationstatus
	 */
	public final void setPerson_RegistrationStatus(subscription.proxies.RegistrationStatus person_registrationstatus)
	{
		setPerson_RegistrationStatus(getContext(), person_registrationstatus);
	}

	/**
	 * Set value of Person_RegistrationStatus
	 * @param context
	 * @param person_registrationstatus
	 */
	public final void setPerson_RegistrationStatus(com.mendix.systemwideinterfaces.core.IContext context, subscription.proxies.RegistrationStatus person_registrationstatus)
	{
		if (person_registrationstatus == null)
			getMendixObject().setValue(context, MemberNames.Person_RegistrationStatus.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Person_RegistrationStatus.toString(), person_registrationstatus.getMendixObject().getId());
	}

	/**
	 * @return value of Person_Employee
	 */
	public final subscription.proxies.Employee getPerson_Employee() throws com.mendix.core.CoreException
	{
		return getPerson_Employee(getContext());
	}

	/**
	 * @param context
	 * @return value of Person_Employee
	 */
	public final subscription.proxies.Employee getPerson_Employee(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		subscription.proxies.Employee result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Person_Employee.toString());
		if (identifier != null)
			result = subscription.proxies.Employee.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Person_Employee
	 * @param person_employee
	 */
	public final void setPerson_Employee(subscription.proxies.Employee person_employee)
	{
		setPerson_Employee(getContext(), person_employee);
	}

	/**
	 * Set value of Person_Employee
	 * @param context
	 * @param person_employee
	 */
	public final void setPerson_Employee(com.mendix.systemwideinterfaces.core.IContext context, subscription.proxies.Employee person_employee)
	{
		if (person_employee == null)
			getMendixObject().setValue(context, MemberNames.Person_Employee.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Person_Employee.toString(), person_employee.getMendixObject().getId());
	}

	/**
	 * @return value of Roommate
	 */
	public final java.util.List<subscription.proxies.Employee> getRoommate() throws com.mendix.core.CoreException
	{
		return getRoommate(getContext());
	}

	/**
	 * @param context
	 * @return value of Roommate
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<subscription.proxies.Employee> getRoommate(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<subscription.proxies.Employee> result = new java.util.ArrayList<subscription.proxies.Employee>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Roommate.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(subscription.proxies.Employee.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Roommate
	 * @param roommate
	 */
	public final void setRoommate(java.util.List<subscription.proxies.Employee> roommate)
	{
		setRoommate(getContext(), roommate);
	}

	/**
	 * Set value of Roommate
	 * @param context
	 * @param roommate
	 */
	public final void setRoommate(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<subscription.proxies.Employee> roommate)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (subscription.proxies.Employee proxyObject : roommate)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Roommate.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return personMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final subscription.proxies.Person that = (subscription.proxies.Person) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Subscription.Person";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
