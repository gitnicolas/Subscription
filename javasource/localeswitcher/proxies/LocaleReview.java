// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package localeswitcher.proxies;

public class LocaleReview
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject localeReviewMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "LocaleSwitcher.LocaleReview";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		TimeZone("TimeZone"),
		Locale("Locale"),
		ApplyNewTimeZone("ApplyNewTimeZone"),
		ApplyNewLanguage("ApplyNewLanguage"),
		RecommendedChange("RecommendedChange"),
		DontRemindMe("DontRemindMe"),
		ShowNotification("ShowNotification"),
		ShowAlert("ShowAlert"),
		LocaleManuallyChosen("LocaleManuallyChosen"),
		LocaleTester_User("LocaleSwitcher.LocaleTester_User"),
		LocaleReview_Language("LocaleSwitcher.LocaleReview_Language"),
		LocaleReview_TimeZone("LocaleSwitcher.LocaleReview_TimeZone");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public LocaleReview(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "LocaleSwitcher.LocaleReview"));
	}

	protected LocaleReview(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject localeReviewMendixObject)
	{
		if (localeReviewMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("LocaleSwitcher.LocaleReview", localeReviewMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a LocaleSwitcher.LocaleReview");

		this.localeReviewMendixObject = localeReviewMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'LocaleReview.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static localeswitcher.proxies.LocaleReview initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return localeswitcher.proxies.LocaleReview.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static localeswitcher.proxies.LocaleReview initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new localeswitcher.proxies.LocaleReview(context, mendixObject);
	}

	public static localeswitcher.proxies.LocaleReview load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return localeswitcher.proxies.LocaleReview.initialize(context, mendixObject);
	}

	public static java.util.List<localeswitcher.proxies.LocaleReview> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<localeswitcher.proxies.LocaleReview> result = new java.util.ArrayList<localeswitcher.proxies.LocaleReview>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//LocaleSwitcher.LocaleReview" + xpathConstraint))
			result.add(localeswitcher.proxies.LocaleReview.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of TimeZone
	 */
	public final java.lang.String getTimeZone()
	{
		return getTimeZone(getContext());
	}

	/**
	 * @param context
	 * @return value of TimeZone
	 */
	public final java.lang.String getTimeZone(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TimeZone.toString());
	}

	/**
	 * Set value of TimeZone
	 * @param timezone
	 */
	public final void setTimeZone(java.lang.String timezone)
	{
		setTimeZone(getContext(), timezone);
	}

	/**
	 * Set value of TimeZone
	 * @param context
	 * @param timezone
	 */
	public final void setTimeZone(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String timezone)
	{
		getMendixObject().setValue(context, MemberNames.TimeZone.toString(), timezone);
	}

	/**
	 * @return value of Locale
	 */
	public final java.lang.String getLocale()
	{
		return getLocale(getContext());
	}

	/**
	 * @param context
	 * @return value of Locale
	 */
	public final java.lang.String getLocale(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Locale.toString());
	}

	/**
	 * Set value of Locale
	 * @param locale
	 */
	public final void setLocale(java.lang.String locale)
	{
		setLocale(getContext(), locale);
	}

	/**
	 * Set value of Locale
	 * @param context
	 * @param locale
	 */
	public final void setLocale(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String locale)
	{
		getMendixObject().setValue(context, MemberNames.Locale.toString(), locale);
	}

	/**
	 * @return value of ApplyNewTimeZone
	 */
	public final java.lang.Boolean getApplyNewTimeZone()
	{
		return getApplyNewTimeZone(getContext());
	}

	/**
	 * @param context
	 * @return value of ApplyNewTimeZone
	 */
	public final java.lang.Boolean getApplyNewTimeZone(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ApplyNewTimeZone.toString());
	}

	/**
	 * Set value of ApplyNewTimeZone
	 * @param applynewtimezone
	 */
	public final void setApplyNewTimeZone(java.lang.Boolean applynewtimezone)
	{
		setApplyNewTimeZone(getContext(), applynewtimezone);
	}

	/**
	 * Set value of ApplyNewTimeZone
	 * @param context
	 * @param applynewtimezone
	 */
	public final void setApplyNewTimeZone(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean applynewtimezone)
	{
		getMendixObject().setValue(context, MemberNames.ApplyNewTimeZone.toString(), applynewtimezone);
	}

	/**
	 * @return value of ApplyNewLanguage
	 */
	public final java.lang.Boolean getApplyNewLanguage()
	{
		return getApplyNewLanguage(getContext());
	}

	/**
	 * @param context
	 * @return value of ApplyNewLanguage
	 */
	public final java.lang.Boolean getApplyNewLanguage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ApplyNewLanguage.toString());
	}

	/**
	 * Set value of ApplyNewLanguage
	 * @param applynewlanguage
	 */
	public final void setApplyNewLanguage(java.lang.Boolean applynewlanguage)
	{
		setApplyNewLanguage(getContext(), applynewlanguage);
	}

	/**
	 * Set value of ApplyNewLanguage
	 * @param context
	 * @param applynewlanguage
	 */
	public final void setApplyNewLanguage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean applynewlanguage)
	{
		getMendixObject().setValue(context, MemberNames.ApplyNewLanguage.toString(), applynewlanguage);
	}

	/**
	 * Set value of RecommendedChange
	 * @param recommendedchange
	 */
	public final localeswitcher.proxies.RecommendedChange getRecommendedChange()
	{
		return getRecommendedChange(getContext());
	}

	/**
	 * @param context
	 * @return value of RecommendedChange
	 */
	public final localeswitcher.proxies.RecommendedChange getRecommendedChange(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.RecommendedChange.toString());
		if (obj == null)
			return null;

		return localeswitcher.proxies.RecommendedChange.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of RecommendedChange
	 * @param recommendedchange
	 */
	public final void setRecommendedChange(localeswitcher.proxies.RecommendedChange recommendedchange)
	{
		setRecommendedChange(getContext(), recommendedchange);
	}

	/**
	 * Set value of RecommendedChange
	 * @param context
	 * @param recommendedchange
	 */
	public final void setRecommendedChange(com.mendix.systemwideinterfaces.core.IContext context, localeswitcher.proxies.RecommendedChange recommendedchange)
	{
		if (recommendedchange != null)
			getMendixObject().setValue(context, MemberNames.RecommendedChange.toString(), recommendedchange.toString());
		else
			getMendixObject().setValue(context, MemberNames.RecommendedChange.toString(), null);
	}

	/**
	 * @return value of DontRemindMe
	 */
	public final java.lang.Boolean getDontRemindMe()
	{
		return getDontRemindMe(getContext());
	}

	/**
	 * @param context
	 * @return value of DontRemindMe
	 */
	public final java.lang.Boolean getDontRemindMe(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.DontRemindMe.toString());
	}

	/**
	 * Set value of DontRemindMe
	 * @param dontremindme
	 */
	public final void setDontRemindMe(java.lang.Boolean dontremindme)
	{
		setDontRemindMe(getContext(), dontremindme);
	}

	/**
	 * Set value of DontRemindMe
	 * @param context
	 * @param dontremindme
	 */
	public final void setDontRemindMe(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean dontremindme)
	{
		getMendixObject().setValue(context, MemberNames.DontRemindMe.toString(), dontremindme);
	}

	/**
	 * @return value of ShowNotification
	 */
	public final java.lang.Boolean getShowNotification()
	{
		return getShowNotification(getContext());
	}

	/**
	 * @param context
	 * @return value of ShowNotification
	 */
	public final java.lang.Boolean getShowNotification(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ShowNotification.toString());
	}

	/**
	 * Set value of ShowNotification
	 * @param shownotification
	 */
	public final void setShowNotification(java.lang.Boolean shownotification)
	{
		setShowNotification(getContext(), shownotification);
	}

	/**
	 * Set value of ShowNotification
	 * @param context
	 * @param shownotification
	 */
	public final void setShowNotification(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean shownotification)
	{
		getMendixObject().setValue(context, MemberNames.ShowNotification.toString(), shownotification);
	}

	/**
	 * @return value of ShowAlert
	 */
	public final java.lang.Boolean getShowAlert()
	{
		return getShowAlert(getContext());
	}

	/**
	 * @param context
	 * @return value of ShowAlert
	 */
	public final java.lang.Boolean getShowAlert(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.ShowAlert.toString());
	}

	/**
	 * Set value of ShowAlert
	 * @param showalert
	 */
	public final void setShowAlert(java.lang.Boolean showalert)
	{
		setShowAlert(getContext(), showalert);
	}

	/**
	 * Set value of ShowAlert
	 * @param context
	 * @param showalert
	 */
	public final void setShowAlert(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean showalert)
	{
		getMendixObject().setValue(context, MemberNames.ShowAlert.toString(), showalert);
	}

	/**
	 * @return value of LocaleManuallyChosen
	 */
	public final java.lang.Boolean getLocaleManuallyChosen()
	{
		return getLocaleManuallyChosen(getContext());
	}

	/**
	 * @param context
	 * @return value of LocaleManuallyChosen
	 */
	public final java.lang.Boolean getLocaleManuallyChosen(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.LocaleManuallyChosen.toString());
	}

	/**
	 * Set value of LocaleManuallyChosen
	 * @param localemanuallychosen
	 */
	public final void setLocaleManuallyChosen(java.lang.Boolean localemanuallychosen)
	{
		setLocaleManuallyChosen(getContext(), localemanuallychosen);
	}

	/**
	 * Set value of LocaleManuallyChosen
	 * @param context
	 * @param localemanuallychosen
	 */
	public final void setLocaleManuallyChosen(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean localemanuallychosen)
	{
		getMendixObject().setValue(context, MemberNames.LocaleManuallyChosen.toString(), localemanuallychosen);
	}

	/**
	 * @return value of LocaleTester_User
	 */
	public final system.proxies.User getLocaleTester_User() throws com.mendix.core.CoreException
	{
		return getLocaleTester_User(getContext());
	}

	/**
	 * @param context
	 * @return value of LocaleTester_User
	 */
	public final system.proxies.User getLocaleTester_User(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.LocaleTester_User.toString());
		if (identifier != null)
			result = system.proxies.User.load(context, identifier);
		return result;
	}

	/**
	 * Set value of LocaleTester_User
	 * @param localetester_user
	 */
	public final void setLocaleTester_User(system.proxies.User localetester_user)
	{
		setLocaleTester_User(getContext(), localetester_user);
	}

	/**
	 * Set value of LocaleTester_User
	 * @param context
	 * @param localetester_user
	 */
	public final void setLocaleTester_User(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.User localetester_user)
	{
		if (localetester_user == null)
			getMendixObject().setValue(context, MemberNames.LocaleTester_User.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.LocaleTester_User.toString(), localetester_user.getMendixObject().getId());
	}

	/**
	 * @return value of LocaleReview_Language
	 */
	public final system.proxies.Language getLocaleReview_Language() throws com.mendix.core.CoreException
	{
		return getLocaleReview_Language(getContext());
	}

	/**
	 * @param context
	 * @return value of LocaleReview_Language
	 */
	public final system.proxies.Language getLocaleReview_Language(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.Language result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.LocaleReview_Language.toString());
		if (identifier != null)
			result = system.proxies.Language.load(context, identifier);
		return result;
	}

	/**
	 * Set value of LocaleReview_Language
	 * @param localereview_language
	 */
	public final void setLocaleReview_Language(system.proxies.Language localereview_language)
	{
		setLocaleReview_Language(getContext(), localereview_language);
	}

	/**
	 * Set value of LocaleReview_Language
	 * @param context
	 * @param localereview_language
	 */
	public final void setLocaleReview_Language(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.Language localereview_language)
	{
		if (localereview_language == null)
			getMendixObject().setValue(context, MemberNames.LocaleReview_Language.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.LocaleReview_Language.toString(), localereview_language.getMendixObject().getId());
	}

	/**
	 * @return value of LocaleReview_TimeZone
	 */
	public final system.proxies.TimeZone getLocaleReview_TimeZone() throws com.mendix.core.CoreException
	{
		return getLocaleReview_TimeZone(getContext());
	}

	/**
	 * @param context
	 * @return value of LocaleReview_TimeZone
	 */
	public final system.proxies.TimeZone getLocaleReview_TimeZone(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.TimeZone result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.LocaleReview_TimeZone.toString());
		if (identifier != null)
			result = system.proxies.TimeZone.load(context, identifier);
		return result;
	}

	/**
	 * Set value of LocaleReview_TimeZone
	 * @param localereview_timezone
	 */
	public final void setLocaleReview_TimeZone(system.proxies.TimeZone localereview_timezone)
	{
		setLocaleReview_TimeZone(getContext(), localereview_timezone);
	}

	/**
	 * Set value of LocaleReview_TimeZone
	 * @param context
	 * @param localereview_timezone
	 */
	public final void setLocaleReview_TimeZone(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.TimeZone localereview_timezone)
	{
		if (localereview_timezone == null)
			getMendixObject().setValue(context, MemberNames.LocaleReview_TimeZone.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.LocaleReview_TimeZone.toString(), localereview_timezone.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return localeReviewMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final localeswitcher.proxies.LocaleReview that = (localeswitcher.proxies.LocaleReview) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "LocaleSwitcher.LocaleReview";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
